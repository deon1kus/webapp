// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
const API_BASE_URL = 'http://194.87.0.193:3001';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let products = [];
let categories = [];
let cart = JSON.parse(localStorage.getItem('cart')) || [];
let currentCategory = 'all';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initApp() {
    tg.expand();
    tg.enableClosingConfirmation();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (tg.initDataUnsafe.user) {
        const user = tg.initDataUnsafe.user;
        document.getElementById('userName').textContent = `${user.first_name}`;
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    await loadCategories();
    await loadProducts();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã
    updateCartCount();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å API
async function loadProducts() {
    try {
        const response = await fetch(`${API_BASE_URL}/api/products`);
        if (response.ok) {
            products = await response.json();
        } else {
            throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
        // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
        products = [
            {
                id: 1,
                name: "iPhone 15 Pro",
                price: 99990,
                category: "electronics",
                image: "https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=300&h=300&fit=crop",
                description: "–ù–æ–≤—ã–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω —Å –∫–∞–º–µ—Ä–æ–π 48MP",
                stock: 10
            },
            {
                id: 2,
                name: "MacBook Air M2",
                price: 129990,
                category: "electronics",
                image: "https://images.unsplash.com/photo-1541807084-5c52b6b3adef?w=300&h=300&fit=crop",
                description: "–õ–µ–≥–∫–∏–π –∏ –º–æ—â–Ω—ã–π –Ω–æ—É—Ç–±—É–∫",
                stock: 5
            },
            {
                id: 3,
                name: "–§—É—Ç–±–æ–ª–∫–∞ —Ö–ª–æ–ø–∫–æ–≤–∞—è",
                price: 1990,
                category: "clothing",
                image: "https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?w=300&h=300&fit=crop",
                description: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞",
                stock: 20
            }
        ];
    }
    renderProducts(currentCategory);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å API
async function loadCategories() {
    try {
        const response = await fetch(`${API_BASE_URL}/api/categories`);
        if (response.ok) {
            categories = await response.json();
        } else {
            throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
        // –î–µ–º–æ-–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
        categories = [
            { id: 'all', name: '–í—Å–µ —Ç–æ–≤–∞—Ä—ã', icon: 'üõí' },
            { id: 'electronics', name: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', icon: 'üì±' },
            { id: 'clothing', name: '–û–¥–µ–∂–¥–∞', icon: 'üëï' }
        ];
    }
    renderCategories();
}

// –†–µ–Ω–¥–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function renderCategories() {
    const container = document.getElementById('categories');
    container.innerHTML = categories.map(cat => `
        <button class="category-btn ${cat.id === currentCategory ? 'active' : ''}" 
                data-category="${cat.id}">
            ${cat.icon || ''} ${cat.name}
        </button>
    `).join('');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    container.querySelectorAll('.category-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            container.querySelectorAll('.category-btn').forEach(b => b.classList.remove('active'));
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–π –∫–Ω–æ–ø–∫–µ
            btn.classList.add('active');
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            currentCategory = btn.dataset.category;
            renderProducts(currentCategory);
        });
    });
}

// –†–µ–Ω–¥–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤
function renderProducts(category) {
    const container = document.getElementById('productsGrid');
    const filteredProducts = category === 'all' 
        ? products 
        : products.filter(p => p.category === category);
    
    if (filteredProducts.length === 0) {
        container.innerHTML = '<div class="loading">–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
        return;
    }
    
    container.innerHTML = filteredProducts.map(product => `
        <div class="product-card" onclick="showProductDetails(${product.id})">
            <img src="${product.image}" alt="${product.name}" class="product-image"
                 onerror="this.src='https://via.placeholder.com/150/2481cc/ffffff?text=üì¶'">
            <h3>${product.name}</h3>
            <div class="product-price">${product.price.toLocaleString()} —Ä—É–±.</div>
            <button class="add-to-cart" onclick="event.stopPropagation(); addToCart(${product.id})">
                –í –∫–æ—Ä–∑–∏–Ω—É
            </button>
        </div>
    `).join('');
}

// –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä–∞
function showProductDetails(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        tg.showPopup({
            title: product.name,
            message: `${product.description}\n\n–¶–µ–Ω–∞: ${product.price.toLocaleString()} —Ä—É–±.`,
            buttons: [
                { id: 'add', type: 'default', text: '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É' },
                { type: 'cancel' }
            ]
        }, (btnId) => {
            if (btnId === 'add') {
                addToCart(productId);
            }
        });
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function updateCartCount() {
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    document.getElementById('cartCount').textContent = totalItems;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', initApp);
