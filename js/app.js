// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
const API_BASE_URL = 'http://194.87.0.193:3001';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let products = [];
let categories = [];
let cart = JSON.parse(localStorage.getItem('cyber-cart')) || [];
let currentCategory = 'all';
let isAdmin = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initApp() {
    tg.expand();
    tg.enableClosingConfirmation();
    tg.setHeaderColor('#00f3ff');
    tg.setBackgroundColor('#0a0a0a');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞
    checkAdminRights();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (tg.initDataUnsafe.user) {
        const user = tg.initDataUnsafe.user;
        document.getElementById('userName').textContent = `@${user.username || user.first_name}`;
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    await loadCategories();
    await loadProducts();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã
    updateCartCount();
    setupMainButton();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function checkAdminRights() {
    const adminIds = ['291867873']; // –í–∞—à ID
    const user = tg.initDataUnsafe.user;
    
    if (user && adminIds.includes(user.id.toString())) {
        isAdmin = true;
        showAdminPanel();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function showAdminPanel() {
    const header = document.querySelector('.header');
    const adminBtn = document.createElement('button');
    adminBtn.className = 'cyber-button';
    adminBtn.innerHTML = '‚ö° –ê–î–ú–ò–ù';
    adminBtn.onclick = showAdminModal;
    
    header.appendChild(adminBtn);
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function showAdminModal() {
    tg.showPopup({
        title: '‚öôÔ∏è –ü–ê–ù–ï–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø',
        message: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
        buttons: [
            { id: 'add_product', type: 'default', text: '‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä' },
            { id: 'view_orders', type: 'default', text: 'üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤' },
            { id: 'stats', type: 'default', text: 'üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' },
            { type: 'cancel' }
        ]
    }, async (buttonId) => {
        switch (buttonId) {
            case 'add_product':
                showAddProductForm();
                break;
            case 'view_orders':
                await showOrdersList();
                break;
            case 'stats':
                showStats();
                break;
        }
    });
}

// –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
function showAddProductForm() {
    tg.showPopup({
        title: '‚ûï –î–û–ë–ê–í–ò–¢–¨ –¢–û–í–ê–†',
        message: '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞:',
        buttons: [
            { id: 'submit', type: 'default', text: '‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å' },
            { type: 'cancel' }
        ]
    }, (buttonId) => {
        if (buttonId === 'submit') {
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ –≤–≤–æ–¥–∞
            addProductViaForm();
        }
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å API
async function loadProducts() {
    try {
        showLoading();
        const response = await fetch(`${API_BASE_URL}/api/products`);
        if (response.ok) {
            products = await response.json();
        } else {
            throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
        // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
        products = getDemoProducts();
    }
    renderProducts(currentCategory);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å API
async function loadCategories() {
    try {
        const response = await fetch(`${API_BASE_URL}/api/categories`);
        if (response.ok) {
            categories = await response.json();
        } else {
            throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
        categories = getDemoCategories();
    }
    renderCategories();
}

// –†–µ–Ω–¥–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function renderCategories() {
    const container = document.getElementById('categories');
    container.innerHTML = categories.map(cat => `
        <button class="category-btn ${cat.id === currentCategory ? 'active' : ''}" 
                onclick="selectCategory('${cat.id}')">
            ${cat.icon || ''} ${cat.name}
        </button>
    `).join('');
}

// –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function selectCategory(categoryId) {
    currentCategory = categoryId;
    renderCategories();
    renderProducts(currentCategory);
}

// –†–µ–Ω–¥–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤
function renderProducts(category) {
    const container = document.getElementById('productsGrid');
    const filteredProducts = category === 'all' 
        ? products 
        : products.filter(p => p.category === category);
    
    if (filteredProducts.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <div>–¢–û–í–ê–†–´ –ù–ï –ù–ê–ô–î–ï–ù–´</div>
                <div style="font-size: 12px; margin-top: 10px;">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é</div>
            </div>
        `;
        return;
    }
    
    container.innerHTML = filteredProducts.map(product => `
        <div class="product-card" onclick="showProductDetails(${product.id})">
            ${product.stock < 5 ? `<div class="stock-badge">${product.stock} LEFT</div>` : ''}
            <img src="${product.image}" alt="${product.name}" class="product-image"
                 onerror="this.src='https://images.unsplash.com/photo-1586953208448-b95a79798f07?w=150&h=150&fit=crop&auto=format'">
            <div class="product-name">${product.name}</div>
            <div class="product-description">${product.description}</div>
            <div class="product-price">${formatPrice(product.price)} ‚Çø</div>
            <button class="cyber-button" onclick="event.stopPropagation(); addToCart(${product.id})" 
                    style="width: 100%; margin-top: 5px;" ${product.stock === 0 ? 'disabled' : ''}>
                ${product.stock === 0 ? 'OUT OF STOCK' : 'ADD TO CART'}
            </button>
        </div>
    `).join('');
}

// –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä–∞
function showProductDetails(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        tg.showPopup({
            title: `üìÄ ${product.name}`,
            message: `
${product.description}

üíæ –¶–µ–Ω–∞: ${formatPrice(product.price)} ‚Çø
üñ•Ô∏è –í –Ω–∞–ª–∏—á–∏–∏: ${product.stock} —à—Ç.
${product.stock < 3 ? '\n‚ö†Ô∏è –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è!' : ''}
            `.trim(),
            buttons: [
                { id: 'add', type: 'default', text: 'üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É' },
                isAdmin ? { id: 'edit', type: 'default', text: '‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' } : null,
                { type: 'cancel' }
            ].filter(Boolean)
        }, (btnId) => {
            if (btnId === 'add') {
                addToCart(productId);
            } else if (btnId === 'edit') {
                editProduct(productId);
            }
        });
    }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
function formatPrice(price) {
    return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
function showLoading() {
    const container = document.getElementById('productsGrid');
    container.innerHTML = `
        <div class="loading">
            <div>–ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–•</div>
            <div style="font-size: 12px; margin-top: 10px;">–ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö –°–ï–†–í–ï–†–£...</div>
        </div>
    `;
}

// –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
function getDemoProducts() {
    return [
        {
            id: 1,
            name: "CYBER DECK X1",
            price: 29990,
            category: "electronics",
            image: "https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=300&h=300&fit=crop",
            description: "–ú–æ—â–Ω—ã–π –∫–∏–±–µ—Ä–¥–µ—Å–∫ –¥–ª—è —Ö–∞–∫–µ—Ä—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π",
            stock: 3
        },
        {
            id: 2,
            name: "NEURAL LINK",
            price: 15990,
            category: "electronics",
            image: "https://images.unsplash.com/photo-1541807084-5c52b6b3adef?w=300&h=300&fit=crop",
            description: "–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–∑–≥-–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è",
            stock: 7
        },
        {
            id: 3,
            name: "SYNTHETIC JACKET",
            price: 4990,
            category: "clothing",
            image: "https://images.unsplash.com/photo-1551028719-00167b16eac5?w=300&h=300&fit=crop",
            description: "–ó–∞—â–∏—Ç–Ω—ã–π –∫–æ—Å—Ç—é–º —Å –Ω–µ–æ–Ω–æ–≤–æ–π –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π",
            stock: 12
        }
    ];
}

function getDemoCategories() {
    return [
        { id: 'all', name: '–í–°–ï –¢–û–í–ê–†–´', icon: 'üñ•Ô∏è' },
        { id: 'electronics', name: '–≠–õ–ï–ö–¢–†–û–ù–ò–ö–ê', icon: '‚ö°' },
        { id: 'clothing', name: '–û–î–ï–ñ–î–ê', icon: 'üëï' },
        { id: 'cyberware', name: '–ö–ò–ë–ï–†–ù–ï–¢–ò–ö–ê', icon: 'üîß' }
    ];
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MainButton
function setupMainButton() {
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    
    if (totalItems > 0) {
        tg.MainButton.setText(`üõí –ö–û–†–ó–ò–ù–ê: ${formatPrice(totalPrice)} ‚Çø`);
        tg.MainButton.show();
        tg.MainButton.onClick(showCart);
    } else {
        tg.MainButton.hide();
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', initApp);
